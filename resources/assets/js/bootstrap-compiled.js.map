{"version":3,"sources":["bootstrap.js"],"names":[],"mappings":";;;;;;;AAEA;;;;AA2DA;;;;AAEA;;;;AAeA;;;;AAEA;;;;AAyBA;;;;;;AAxGA,OAAO,CAAP,GAAW,QAAQ,QAAR,CAAX;;;AAGA;;;;;;AAMA,IAAI;AACA,UAAQ,gBAAR;AACH,CAFD,CAEE,OAAO,CAAP,EAAU,CAAE;;AAEd;;;;;;AAMA,OAAO,KAAP,GAAe,QAAQ,OAAR,CAAf;;AAEA,OAAO,KAAP,CAAa,QAAb,CAAsB,OAAtB,CAA8B,MAA9B,CAAqC,kBAArC,IAA2D,gBAA3D;;AAEA;;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;AAMA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;AAQA;;AAEA;;;AAGA;AACA;;AAEA;;;;;;;;;AASA;;AAEA;;AAEA;AACA;;AAEA,cAAI,GAAJ;;AAEO,IAAM,0BAAS,wBAAc;AAChC;AADgC,CAAd,CAAf;;AAIP;;AAEA,yBAAe,IAAf,kBAA0B,MAA1B;;AAEA,cAAI,MAAJ,GAAa,MAAb;;AAEA;;;;;;;;AAQA;;;AAGA,cAAI,GAAJ;;kBAEe;AACX;AADW,C","file":"bootstrap-compiled.js","sourcesContent":["\nwindow._ = require('lodash');\nimport Vue from 'vue';\n\n/**\n * We'll load jQuery and the Bootstrap jQuery plugin which provides support\n * for JavaScript based Bootstrap features such as modals and tabs. This\n * code may be modified to fit the specific needs of your application.\n */\n\ntry {\n    require('bootstrap-sass');\n} catch (e) {}\n\n/**\n * We'll load the axios HTTP library which allows us to easily issue requests\n * to our Laravel back-end. This library automatically handles sending the\n * CSRF token as a header based on the value of the \"XSRF\" token cookie.\n */\n\nwindow.axios = require('axios');\n\nwindow.axios.defaults.headers.common['X-Requested-With'] = 'XMLHttpRequest';\n\n/**\n * Next we will register the CSRF Token as a common header with Axios so that\n * all outgoing HTTP requests automatically have it attached. This is just\n * a simple convenience so we don't have to attach every token manually.\n */\n\n// let token = document.head.querySelector('meta[name=\"csrf-token\"]');\n//\n// if (token) {\n//     window.axios.defaults.headers.common['X-CSRF-TOKEN'] = token.content;\n// } else {\n//     console.error('CSRF token not found: https://laravel.com/docs/csrf#csrf-x-csrf-token');\n// }\n\n/**\n * Echo exposes an expressive API for subscribing to channels and listening\n * for events that are broadcast by Laravel. Echo and event broadcasting\n * allows your team to easily build robust real-time web applications.\n */\n\n// import Echo from 'laravel-echo'\n\n// window.Pusher = require('pusher-js');\n\n// window.Echo = new Echo({\n//     broadcaster: 'pusher',\n//     key: 'your-pusher-key'\n// });\n/* ============\n * Vuex Router Sync\n * ============\n *\n * Effortlessly keep vue-Router and vuex store in sync.\n *\n * https://github.com/vuejs/vuex-router-sync/blob/master/README.md\n */\n// eslint-disable-next-line\nimport VuexRouterSync from 'vuex-router-sync';\n// eslint-disable-next-line\nimport store from './app/store';\n\n// store.dispatch('checkAuthentication');\n// store.dispatch('getAccount', {});\n\n/* ============\n * Vue Router\n * ============\n *\n * The official Router for Vue.js. It deeply integrates with Vue.js core\n * to make building Single Page Applications with Vue.js a breeze.\n *\n * http://router.vuejs.org/en/index.html\n */\n// eslint-disable-next-line\nimport VueRouter from 'vue-router';\n// eslint-disable-next-line\nimport routes from './app/routes';\n// eslint-disable-next-line\n// import routeMidlleware from './app/route-middleware';\n\nVue.use(VueRouter);\n\nexport const router = new VueRouter({\n    routes,\n});\n\n// router.beforeEach(routeMidlleware.beforeEach);\n\nVuexRouterSync.sync(store,router);\n\nVue.router = router;\n\n/* ============\n * Element User Interface\n * ============\n *\n * Vue.js UI components.\n *\n * http://element.eleme.io/#/en-US\n */\n// eslint-disable-next-line\nimport ElementUI from 'element-ui';\n\nVue.use(ElementUI);\n\nexport default {\n    router,\n};"]}